---
import { base } from "astro:config/server";

const nav = [
  { name: "Posts", href: "/posts" },
  { name: "Projects", href: "/projects" },
];

// Normalize function to strip base, trim slashes, and lowercase
const normalize = (path: string) =>
  path.replace(base, "").replace(/\/+$/, "").toLowerCase() || "/";

// Normalize current path
const currentPath = normalize(Astro.url.pathname);

// Utility to check if nav item is active
const isActive = (href: string) => normalize(href) === currentPath;
---

<header
  role="banner"
  aria-label="Site Header"
  class="w-full px-6 py-4 bg-background text-foreground border-t border-grid sticky top-0 z-50"
>
  <div
    class="max-w-7xl mx-auto flex flex-col md:flex-row items-center justify-between gap-4"
  >
    <!-- Logo / Site Title -->
    <div class="text-lg font-semibold">
      <a href="/" class="hover:text-primary transition-colors">My Blog</a>
    </div>

    <!-- Center Nav Links -->
    <nav aria-label="Main Navigation">
      <ul class="flex gap-6 text-sm font-medium">
        {
          nav.map((item) => (
            <li>
              <a
                href={item.href}
                class={`hover:text-primary transition-colors ${
                  isActive(item.href)
                    ? "text-primary underline underline-offset-4"
                    : ""
                }`}
                aria-current={isActive(item.href) ? "page" : undefined}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- Button Group: Theme + Background -->
    <div class="flex gap-1 rounded-lg border border-grid overflow-hidden">
      <!-- Theme Toggle -->
      <button
        type="button"
        id="theme-toggle"
        class="p-2 hover:bg-grid transition-colors"
        aria-label="Toggle Dark Mode"
      >
        <svg id="theme-icon" class="w-5 h-5 fill-current" viewBox="0 0 24 24">
          <path
            id="sun-icon"
            d="M12 4a1 1 0 0 1 1 1v1a1 1 0 0 1-2 0V5a1 1 0 0 1 1-1zm6.36..."
          ></path>
          <path
            id="moon-icon"
            class="hidden"
            d="M17.75 15.25a6.5 6.5 0 0 1-9-9..."></path>
        </svg>
      </button>

      <!-- Background Pattern Toggle -->
      <button
        type="button"
        id="bg-toggle"
        class="p-2 hover:bg-grid transition-colors"
        aria-label="Toggle Background Pattern"
      >
        <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
          <circle
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            stroke-width="2"
            fill="none"></circle>
          <path
            d="M4 4l16 16M4 20L20 4"
            stroke="currentColor"
            stroke-width="1.5"></path>
        </svg>
      </button>
    </div>
  </div>
</header>

<script>
  const patterns = ["grid-paper", "dot-grid"];
  const defaultTheme = "light";
  const defaultPattern = "grid-paper";

  // Load saved preferences
  const storedTheme = localStorage.getItem("theme") || defaultTheme;
  const storedPattern = localStorage.getItem("background") || defaultPattern;

  // Apply theme class early
  if (storedTheme === "dark") {
    document.documentElement.classList.add("dark");
  }

  // Apply background pattern class early
  document.body.classList.add(storedPattern);

  document.addEventListener("DOMContentLoaded", () => {
    const pattern = localStorage.getItem("background") || "grid-paper";
    document.body.classList.add(pattern);

    const themeBtn = document.getElementById("theme-toggle");
    const themeIconSun = document.getElementById("sun-icon");
    const themeIconMoon = document.getElementById("moon-icon");

    const bgBtn = document.getElementById("bg-toggle");

    // Set initial icons
    const isDark = document.documentElement.classList.contains("dark");
    themeIconSun.classList.toggle("hidden", isDark);
    themeIconMoon.classList.toggle("hidden", !isDark);

    // Theme toggle
    themeBtn.addEventListener("click", () => {
      const html = document.documentElement;
      const isNowDark = html.classList.toggle("dark");
      localStorage.setItem("theme", isNowDark ? "dark" : "light");
      themeIconSun.classList.toggle("hidden", isNowDark);
      themeIconMoon.classList.toggle("hidden", !isNowDark);
    });

    // Background toggle
    bgBtn.addEventListener("click", () => {
      const body = document.body;
      const current =
        patterns.find((p) => body.classList.contains(p)) || defaultPattern;
      const next = patterns[(patterns.indexOf(current) + 1) % patterns.length];
      body.classList.remove(...patterns);
      body.classList.add(next);
      localStorage.setItem("background", next);
    });
  });
</script>
